@model Admin_Panel.Pagginations.PagiData<Admin_Panel.Models.Mark>
@* @model IEnumerable<Admin_Panel.Models.Mark> *@

@{
    ViewData["Title"] = "Index";
}

<div class="container">
    <h1 class="text-center my-4">Marks</h1>
    
      <div class="row justify-content-end mb-4">
         <div class="col-md-4">
            <form method="get" class="form-inline">
                <div class="input-group">
                    <input type="text" name="search" class="form-control" placeholder="Search by title" value="@Context.Request.Query["search"]">
                    @if (!string.IsNullOrEmpty(Context.Request.Query["search"]))
                    {
                        <div class="input-group-append">
                            <a asp-action="Index" class="btn btn-outline-secondary">Undo Search</a>
                        </div>
                    }
                    <div class="input-group-append">
                        <button type="submit" class="btn btn-primary">Search</button>
                    </div>
                </div>
            </form>
        </div>
        <div class="col-md-2">
            <a asp-action="Create" class="btn btn-primary">Create New</a>
        </div>
    </div>
    <div class="table-responsive">
        <table class="table table-bordered ">
            <thead>
                <tr>
                    <th> @Html.DisplayNameFor(model =>  model.Items.First().Id)</th>
                    <th> @Html.DisplayNameFor(model =>  model.Items.First().Lang)</th>
                    <th> @Html.DisplayNameFor(model =>  model.Items.First().Title)</th>
                    <th>@Html.DisplayNameFor(model =>  model.Items.First().Color)</th>
                    <th>@Html.DisplayNameFor(model =>  model.Items.First().Type)</th>
                    <th>@Html.DisplayNameFor(model =>  model.Items.First().Status)</th>
                    
                    <th>@Html.DisplayNameFor(model =>  model.Items.First().CreatedAt)</th>
                    <th>@Html.DisplayNameFor(model =>  model.Items.First().UpdatedAt)</th>
                    <th class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Items) {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Id)</td>
                        <td>@Html.DisplayFor(modelItem => item.Lang)</td>
                        <td>@Html.DisplayFor(modelItem => item.Title)</td>
                        <td>@Html.DisplayFor(modelItem => item.Color)</td>
                        <td>@Html.DisplayFor(modelItem => item.Type)</td>
                        <td>@Html.DisplayFor(modelItem => item.Status)</td>
                        <td>@Html.DisplayFor(modelItem => item.CreatedAt)</td>
                        <td>@Html.DisplayFor(modelItem => item.UpdatedAt)</td>
                        <td class="align-middle">
                              <div class="d-flex justify-content-center">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary btn-sm mr-2">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-success btn-sm mr-2">Details</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
                        </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
        <!-- Pagination -->
    <div class="d-flex justify-content-center">
        <nav aria-label="Page navigation">
            <ul class="pagination">
                @for (var pageNum = Model.StartPage; pageNum <= Model.EndPage; pageNum++)
                {       @if(Model.EndPage > Model.StartPage){
                    <li class="page-item @(pageNum == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="?page=@pageNum">@pageNum</a>
                    </li>
                    }
                }
            </ul>
        </nav>
    </div>
</div>